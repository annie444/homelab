extraArgs:
  tcp-services-configmap: nginx-system/tcp-services
  udp-services-configmap: nginx-system/udp-services
controller:
  config:
    annotations-risk-level: Critical
    allow-cross-namespace-resources: true
    allow-snippet-annotations: true
    use-http2: true
    load-balance: round_robin
    http-snippet: |
      # Extract username from access token passed as URL parameter
      map $arg_access_token $accesstoken_from_urlparam {
          # Defaults to just passing back the whole accesstoken
          default   $arg_access_token;
          # Try to extract username part from accesstoken URL parameter
          "~syt_(?<username>.*?)_.*"           $username;
      }

      # Extract username from access token passed as authorization header
      map $http_authorization $mxid_localpart {
          # Defaults to just passing back the whole accesstoken
          default                              $http_authorization;
          # Try to extract username part from accesstoken header
          "~Bearer syt_(?<username>.*?)_.*"    $username;
          # if no authorization-header exist, try mapper for URL parameter "access_token"
          ""                                   $accesstoken_from_urlparam;
      } 
  tcp:
    configMapNamespace: nginx-system
    annotations:
      app: ingress-nginx
      component: tcp-services-configmap
  udp:
    configMapNamespace: nginx-system
    annotations:
      app: ingress-nginx
      component: udp-services-configmap
  service:
    enabled: true
    external:
      enabled: true
    type: LoadBalancer
    enableHttp: true
    enableHttps: true
    ports:
      http: 80
      https: 443
    targetPorts:
      http: http
      https: https
    appProtocol: true
defaultBackend:
  enabled: true
